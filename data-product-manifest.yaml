version: 0.0.13
jobId: "786"
jobName: MSGA_Report
jobType: Aggregated Data Product
alias: Ingesting_data_into_adp_msga_report
discoveryPort:
  name: MSGA_Report
inputPorts:
  - alias: Geography_Master_1
    isDynamic: true
    dataProductUrn: urn:dv:dataproduct:53e98ba0-c6f7-4a2f-9d78-0b8a4eefdf71
    projection: ""
    filter: ""
    warehousePath: "***s3StateBucket***"
    type: readDataIceberg
    catalogName: glue
    optional:
      persistDataFrame: false
      advanceOptions:
        endPoint: s3.undefined.amazonaws.com
        accessKey: abc
        secretKey: abc
      dataProductUrn: urn:dv:dataproduct:53e98ba0-c6f7-4a2f-9d78-0b8a4eefdf71
    tableName: select * from glue.msil_transformed_layer.Geography_Master
  - alias: Accessories_Sales_1
    isDynamic: true
    dataProductUrn: urn:dv:dataproduct:b5b29d5a-edb2-47f1-8818-d83b9f80e675
    projection: ""
    filter: ""
    warehousePath: "***s3StateBucket***"
    type: readDataIceberg
    catalogName: glue
    optional:
      persistDataFrame: false
      advanceOptions:
        endPoint: s3.undefined.amazonaws.com
        accessKey: abc
        secretKey: abc
      dataProductUrn: urn:dv:dataproduct:b5b29d5a-edb2-47f1-8818-d83b9f80e675
    tableName: select * from
      glue.***catalogReference***.b5b29d5a-edb2-47f1-8818-d83b9f80e675
  - alias: Parts_Accessories_Master_1
    isDynamic: true
    dataProductUrn: urn:dv:dataproduct:3ace113a-e949-4884-8b02-e1caddfcc28b
    projection: ""
    filter: ""
    warehousePath: "***s3StateBucket***"
    type: readDataIceberg
    catalogName: glue
    optional:
      persistDataFrame: false
      advanceOptions:
        endPoint: s3.undefined.amazonaws.com
        accessKey: abc
        secretKey: abc
      dataProductUrn: urn:dv:dataproduct:3ace113a-e949-4884-8b02-e1caddfcc28b
    tableName: select * from glue.msil_transformed_layer.Parts_Accessories_Master
  - alias: Dealer_Master_1
    isDynamic: true
    dataProductUrn: urn:dv:dataproduct:54ddeeb9-ff9a-4d57-8fbc-afafa0d45fe9
    projection: ""
    filter: ""
    warehousePath: "***s3StateBucket***"
    type: readDataIceberg
    catalogName: glue
    optional:
      persistDataFrame: false
      advanceOptions:
        endPoint: s3.undefined.amazonaws.com
        accessKey: abc
        secretKey: abc
      dataProductUrn: urn:dv:dataproduct:54ddeeb9-ff9a-4d57-8fbc-afafa0d45fe9
    tableName: select * from glue.msil_transformed_layer.Dealer_Master
productState:
  isDynamic: true
  alias: Ingesting_data_into_adp_msga_report
  retentionVersions: ""
  logicalSchema:
    properties: {}
  stateStoreType: loadDataIceberg
  isProfilingEnabled: false
  updateStrategy: Overwrite
  tableName: msil_transformed_layer.MSGA_Report
  warehousePath: s3://dlp-platform-engine-bucket/
  catalogName: glue
  optional:
    persistDataFrame: false
    enableDataReconciliation: false
    enforceSchema: false
    enforceSchemaMethod: Warning
    catalogType: glue
  refreshInterval: 0 10 * * *
transformation:
  - alias: Spark_SQL_1
    type: SQL
    description: tranformation logic for MSGA
    query: "select SUM(MRP) AS MRP_1,    SUM(ITEM_VALUE) AS
      ITEM_VALUE,   location_description,   region_code,   state_code,   status\
      ,   enq_status,   city,   category_description,   list_description,   enq\
      uiry_orderreadiness_date,   link_part_enquiry,   parent_group,   dealer_m\
      ap_code,   location_code,   short_enq_no,   CUSTOMER_NAME,   CUSTOMER_STA\
      TE,   state,    source_of_enquiry,    customer_remarks,    mode_of_enquir\
      y,    invoice_number,    for_code,    region,    dealer_name,    dealer_c\
      ode,    invoice_date,    enquiry_number,    enquiry_date,   current_times\
      tamp() as etl_inserted_date,    current_timestamp() as
      etl_modified_date,    'platform_admin' as
      etl_created_by,    'platform_admin' as
      etl_updated_by  from    (     select PAM.MRP_1 AS
      MRP,        ACC.ITEM_VALUE AS ITEM_VALUE,        IG.state_name as
      state,        acc.Enquiry_Source AS
      source_of_enquiry,        ACC.Customer_Remarks AS
      customer_remarks,        acc.Mode_Of_Enquiry AS
      mode_of_enquiry,        acc.Invoice_Number_ph_enq AS
      invoice_number,        DM.FOR_CODE AS for_code,        IG.region_name AS
      region,        DM.DEALER_NAME AS dealer_name,        DM.MUL_DEALER_Code AS
      dealer_code,        acc.Invoice_Date_ph_enq AS
      invoice_date,     acc.Status AS status,    acc.Enquiry_Status AS
      enq_status,    '' as city,    acc.part_category as
      part_category,    acc.Parts_First_Followup_Date AS
      Parts_First_Followup_Date,    Product_Category as
      category_description,    header_status as
      list_description,       Order_Readiness_Date AS
      enquiry_orderreadiness_date,       concat(Parent_Group_ph_enq,'|',cast(De\
      aler_Map_Code_ph_enq as
      STRING),'|',Location_Code_ph_enq,'|',Enquiry_Number_ph_enq) as
      link_part_enquiry,       ACC.Enquiry_Number_ph_enq AS
      enquiry_number,        ACC.Enquiry_Date AS
      enquiry_date,    SUBSTR(Enquiry_Number_ph_enq,3) as
      short_enq_no,    ACC.Customer_State AS
      CUSTOMER_STATE,    Parent_Group_ph_enq as
      parent_group,    Dealer_Map_Code_ph_enq as
      dealer_map_code,    Location_Code_ph_enq as
      location_code,    PAM.PART_NUM_VAR as part_number,    PAM.PART_DESC AS
      PART_DESCRIPTION,    IG.REGION_CODE AS REGION_CODE,    IG.STATE_CODE AS
      STATE_CODE,    DM.location_description as
      LOCATION_DESCRIPTION,    ACC.Customer_Name AS
      CUSTOMER_NAME,    ACC.Parts_Quantity as
      part_quantity     from        accessories_sales acc        inner join
      (select distinct PART_NUM_VAR,
      part_desc,MRP_1,parent_group_var,dealer_map_code_var,location_code_var
      from parts_accessories_master where catg_cd<>'U' and PRINCIPAL_MAP_CD = 1
      and DEALER_MAP_CODE = 1) pam on acc.Part_Number_pd_enq =
      pam.PART_NUM_VAR    and acc.Parent_Group_ph_enq = pam.parent_group_var and
      acc.Dealer_Map_Code_ph_enq = pam.dealer_map_code_var and
      acc.Location_Code_ph_enq = pam.location_code_var        inner JOIN (SELECT
      DISTINCT * FROM Dealer_Master WHERE PARENT_GROUP<>'99999' AND
      DEALER_MAP_CODE<>99999 AND LOCATION_CODE<>'999' AND PRINCIPAL_MAP_CD = 1)
      DM on
      concat(         acc.Parent_Group_ph_enq,          '|',          cast(           \
      acc.Dealer_Map_Code_ph_enq as
      STRING         ),          '|',          acc.Location_Code_ph_enq       )=
      concat(         DM.PARENT_GROUP,          '|',          cast(DM.dealer_ma\
      p_code as
      STRING),          '|',          DM.location_code       )        inner join
      (         select            distinct
      state_name,            region_name,            state_code,            reg\
      ion_code          from            geography_master       ) ig on
      TRIM(acc.Customer_State)= TRIM(ig.STATE_CODE)        AND DM.region_code =
      IG.REGION_CODE    )  GROUP
      BY    location_description,   region_code,   state_code,   status,   enq_\
      status,   city,   category_description,   list_description,   enquiry_ord\
      erreadiness_date,   link_part_enquiry,   parent_group,   dealer_map_code,   \
      location_code,   short_enq_no,   CUSTOMER_NAME,   CUSTOMER_STATE,   state\
      ,    source_of_enquiry,    customer_remarks,    mode_of_enquiry,    invoi\
      ce_number,    for_code,    region,    dealer_name,    dealer_code,    inv\
      oice_date,    enquiry_number,    enquiry_date,   etl_inserted_date,    et\
      l_modified_date,    etl_created_by,    etl_updated_by "
    sequenceNo: 5
    references:
      - alias: Geography_Master_1
        sqlReference: geography_master
      - alias: Accessories_Sales_1
        sqlReference: accessories_sales
      - alias: Parts_Accessories_Master_1
        sqlReference: parts_accessories_master
      - alias: Dealer_Master_1
        sqlReference: dealer_master
controlPort:
  dataQualityRules:
    RecordCountCheck:
      productState:
        expression: ">="
        number: 1
        referenceAlias: Ingesting_data_into_adp_msga_report
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
